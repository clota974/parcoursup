const HID = require("node-hid");
//const robotjs = require("robotjs");

//console.log(HID.devices());
var pathA = "IOService:/AppleACPIPlatformExpert/PCI0@0/AppleACPIPCI/XHC1@14/XHC1@14000000/HS01@14100000/PlayStation®VR@14100000/PS VR Control@5/IOUSBHostHIDDevice@14100000,5";
var pathB = "IOService:/AppleACPIPlatformExpert/PCI0@0/AppleACPIPCI/XHC1@14/XHC1@14000000/HS01@14100000/PlayStation®VR@14100000/PS VR Control2@8/IOUSBHostHIDDevice@14100000,8";
var DataEntry = "IOService:/AppleACPIPlatformExpert/PCI0@0/AppleACPIPCI/XHC1@14/XHC1@14000000/HS01@14100000/PlayStation®VR@14100000/PS VR Sensor@4/IOUSBHostHIDDevice@14100000,4";

//Path A and B ok for featureReport

//vid = 1452, pid = 627;
var Entry = new HID.HID(DataEntry);
var ODevice = new HID.HID(pathA);

var show = true;
Entry.on("data", function (data) { 
    if(show){
        buffer = data;
        //show = false;

        compute();
    }
 })

compute = function(){
    hexBuff = buffer.hexSlice();

    hexBoard = hexBuff.replace(/((.){2})/g, function (key) {
        var deciNbr = parseInt(key, 16).toString();
        deciNbr = deciNbr.padStart("0", 3); // Transform 1 to 001

        return key + " "; // Eventually change key to deciNbr
    })

    hexArray = hexBoard.split(" ");

    /**/if(+hexArray[56] >= 2){
        View.goVRMode();
    }else{
       View.goCineMode();
    }/**/

    showData();
}

showData = function(){
    markArray = [20,22,24,26, 28, 30];
    markArray = [42,44,46,49, 55,57];

    

    $("p").text("");

    for (let i = 0; i < hexArray.length; i++) {

        if(markArray.indexOf(i+1)!=-1){
            boldA = "<b>", boldB="</b>";
        }else{
            boldA = "", boldB = "";
        }

        $("p").append(boldA+ hexArray[i] + boldB + " ");

        if ((i + 1) % 16 == 0) {
            $("p").append("<br/>")
        }
    }
}

ODevice.write([0x15,0x00,0xaa,0x10,0xff,0x01,0x46,0x46,0x46,0x46,0x50,0x3c,0x3c,0x46,0x46,0x00,0x00,0x00,0x00,0x00]); 
ODevice.write([0x15,0x00,0xaa,0x10,0xff,0x01,0x46,0x46,0x46,0x46,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00])
//ODevice.write([0x21, 0x00, 0xAA, 0x10, 0x80, 26, 50,1,0,0,0,0,0,0,32,5,0,0,0,0])
 // ON AND OFF
 

cineMode = [0x23,0x00,0xaa,0x04,0x00,0x01,0x00,0x00]
Unknown = [0x11,0x00,0xaa,0x08,0x01,0x11,0x03,0x11,0x00,0x00,0x00,0x00];
VRMode = [0x23,0x00,0xaa,0x04,0x01,0x00,0x00]
cineMode2 = [0x21,0x00,0xaa,0x10,0x80,26,50,0,0x00,0x00,0x00,0x00,0x00,0x00,1,0x05,1,1,0,0x00] 
lockCineMode = [0x21,0x00,0xaa,0x10,0x80,0x63,0x32,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00]
unlockCineMode = [0x21,0x00,0xaa,0x10,0xc0,0x63,0x32,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00]
defaultMode = [0x21,0x00,0xaa,0x10,0xC0,0x32,0x29,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00];
test = [0x21,0x00,0xaa,0x10,0xC0,0x64,0x32,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x20,0x05,0x04,0x02,0x01,0xff];

screenSize = 26; // 26 - 80;
screenDistance = 50; // 20 - 50;
brightness = 0; //0-32
function getScreenSizeArray(){
    return [0x21, 0x00, 0xAA, 0x10, 0x80, screenSize, screenDistance,0,0,0,0,0,0,0,brightness,5,0,0,0,0];
}
View = {
    goVRMode: function(){
        ODevice.write(VRMode);
    },
    goCineMode: function(){
        ODevice.write(cineMode)
    }
}